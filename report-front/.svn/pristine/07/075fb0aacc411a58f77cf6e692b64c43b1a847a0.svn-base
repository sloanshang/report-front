<template>
  <div class="row" id="pdfDom" style="padding-top: 55px;background-color:#fff;">
    <form class="form" style="overflow: hidden">
      <div v-show="!up">
        <div class="form-group col-xs-12 col-sm-6">
          <div class="input-group col-xs-12 col-sm-12" style="padding: 0 15px">
            <div class="input-group-addon">{{$t('swineReport.farm')}}: </div>
            <input class="form-control" readonly v-model="farmName" />
          </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6" v-show="device=='PC'">
          <div class="input-group col-xs-12 col-sm-12" style="padding: 0 15px">
            <div class="input-group-addon">{{$t('swineReport.queryDate')}}: </div>
            <div class="form-control" style="padding: 0; bottom: 0px">
              <el-date-picker style="width: 100%;" size="small"v-model="daterangeVal" type="daterange" range-separator="至" :start-placeholder="startDate" :end-placeholder="endDate"  :picker-options="pickerOptions2" value-format="yyyy-MM-dd">
              </el-date-picker>
            </div>
          </div>
        </div>
        <!--查询的日期范围-->
        <div class="form-group col-xs-12 col-sm-6" v-show="device=='M'">
          <div class="input-group col-xs-12 col-sm-12" style="padding: 0 15px">
            <div class="input-group-addon">{{$t('swineReport.queryDate')}}: </div>
            <div class="form-control" style="padding: 0;height: auto; border: none">
              <dtre001 :date="startDate"  style="float:left; padding-right:2px" v-on:changeDate="doChangeStart"/>
              <dtre002 :date="endDate" style="float:left; padding-right:2px" v-on:changeDate="doChangeEnd"/>
            </div>
          </div>
        </div>
        <!--淘汰类型-->
        <div class="form-group col-xs-12 col-sm-6">
          <div class="input-group col-xs-12 col-sm-12" style="padding: 0 15px">
            <div class="input-group-addon">{{$t('swineReport.removalType')}}: </div>
            <select class="form-control" v-model="parRemovalType">
              <option  value="ALL" selected>ALL</option>
              <option  value="1">{{$t('swineReport.dead')}}</option>
              <option  value="2">{{$t('swineReport.culled')}}</option>
            </select>
          </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
          <div class="input-group col-xs-12 col-sm-12" style="padding: 0 15px">
            <div class="input-group-addon">{{$t('swineReport.location')}}: </div>
            <select class="form-control" v-model="parLocation">
              <option value="ALL">ALL</option>
              <option value="LOC6">LOC6</option>
              <option value="LOC1">LOC1</option>
            </select>
          </div>
        </div>

      </div>

      <div class="form-group col-xs-12 col-sm-12">
        <div class="input-group col-xs-12 col-sm-12" style="padding: 0 15px;text-align: center">
          <button type="button" class="btn btn-primary" @click="doSearch">{{$t('swineReport.search')}}</button>&nbsp;
          <button type="button" class="btn btn-primary">{{$t('swineReport.export')}} Excel</button>&nbsp;
          <button type="button" class="btn btn-primary"v-on:click="getPdf()">{{$t('swineReport.export')}} PDF</button>
          <span class="glyphicon glyphicon-chevron-up btn btn-default" v-show="!up" @click="down"></span>
          <span class="glyphicon glyphicon-chevron-down btn btn-default" v-show="up" @click="down"></span>
        </div>
      </div>
    </form>
    <vue-loading v-show="loadFlag" type="spiningDubbles" color="#3c8dbc" :size="{ width: '100px', height: '100px' }"></vue-loading>
    <div v-show="tableFlag" style="padding: 0 25px;">
      <table class="table table-bordered table-hover table-striped">
        <thead v-show="device=='PC'">
        <tr v-show="tableFlag">
          <th>胎次 </th>
          <th>母猪数量 </th>
          <th>百分比 </th>
        </tr>
        </thead>
        <tbody v-show="device=='PC'">
        <tr v-for="data in datas">
          <td>{{data.parity}}</td>
          <td>{{data.qty}}</td>
          <td>{{data['percent_rate']}}%</td>
        </tr>
        </tbody>
        <tbody v-show="device=='M'">
        <tr v-for="data in datas">
          <td>
            <div class="card-views">
              <div class="card-view">
                <span class="title"> 胎次 </span>
                <span class="value"> {{data.parity}} </span>
              </div>
              <div class="card-view">
                <span class="title"> 母猪数量 </span>
                <span class="value"> {{data.qty}} </span>
              </div>
              <div class="card-view">
                <span class="title"> 百分比 </span>
                <span class="value"> {{data['percent_rate']}}% </span>
              </div>
            </div>
          </td>
        </tr>
        </tbody>
      </table>
    </div>
    <div id="container" style="margin: 20px auto 60px;"></div>
  </div>
</template>

<script>
  import jQuery from 'jquery'
  import G2 from 'g2'
  import {formatDate} from '@/components/utils/date'
  import vueLoading from 'vue-loading-template'
  import Dtre001 from '@/components/cm/dtre001'
  import Dtre002 from '@/components/cm/dtre002'

  export default {
    props: ['orgCode', 'farmOrg', 'device'],
    name: 'swine-Report12',
    components: {
      vueLoading,
      Dtre001,
      Dtre002
    },
    data () {
      return {
        up: false,
        datas: [],
        farmName: this.orgCode + '#' + this.farmOrg,
        loadFlag: false,
        tableFlag: false,
        startDate: new Date(new Date().setTime(new Date().getTime() - 3600 * 1000 * 24 * 7)),
        endDate: new Date(),
        parLocation: 'ALL',  // 舍
        parRemovalType: 'ALL',  // 类型
        chartDates: [],
        daterangeVal: '',
        pickerOptions2: {
          shortcuts: [{
            text: '最近一周',
            onClick (picker) {
              const end = new Date()
              const start = new Date()
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)
              picker.$emit('pick', [start, end])
            }
          }, {
            text: '最近一个月',
            onClick (picker) {
              const end = new Date()
              const start = new Date()
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)
              picker.$emit('pick', [start, end])
            }
          }, {
            text: '最近三个月',
            onClick (picker) {
              const end = new Date()
              const start = new Date()
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)
              picker.$emit('pick', [start, end])
            }
          }]
        },
        htmlTitle: this.$t('message.titleSwineReport12')
      }
    },
    mounted () {
      this.startDate = formatDate(this.startDate, 'yyyy-MM-dd')
      this.endDate = formatDate(this.endDate, 'yyyy-MM-dd')
    },
    methods: {
      down () {
        this.up = !this.up
      },
      doChangeStart (d) {
        var _self = this
        _self.startDate = d
        _self.startDate = formatDate(this.startDate, 'yyyy-MM-dd')
      },
      doChangeEnd (d) {
        var _self = this
        _self.endDate = d
        _self.endDate = formatDate(this.endDate, 'yyyy-MM-dd')
        console.log('ENDDATE : ' + _self.endDate)
      },
      drawChart: function (datas) {
        this.chart && this.chart.destroy()
        this.chart = new G2.Chart({
          id: 'container',
          forceFit: true, // 根据容器的宽度自适应
          height: 250
        })
        this.chart.source(datas, {
          parity: {
            alias: '胎次',
            type: 'cat'
          },
          qty: {
            alias: '母猪数量'
          }
        })
        this.chart.interval().position('parity*qty').color('#03b8ff')
          .shape('rect')
          .label('qty', {offset: 10, label: {fill: '#000'}})
        this.chart.animate(false)
        this.chart.render()
      },
      doSearch () {
        let _self = this
        _self.datas = ''
        _self.tableFlag = false
        _self.loadFlag = true
        jQuery.ajax({
          url: '/standard/' + _self.orgCode + '/' + _self.farmOrg + '/report12',
          type: 'POST',
          //  contentType: 'application/json',"
          data: {'startDate': _self.daterangeVal[0] || _self.startDate, 'endDate': _self.daterangeVal[1] || _self.endDate, 'parLocation': _self.parLocation, 'parRemovalType': _self.parRemovalType},
          dataType: 'json',
          success: function (res) {
            _self.datas = res
            _self.chartDatas = res.slice(0, (res.length - 1))
            _self.drawChart(_self.chartDatas)
            _self.loadFlag = false
            _self.tableFlag = true
          },
          fail: function (e) {
            this.tableFlag = false
            alert('请求失败')
            console.log('查询失败')
          }
        })
      }
    }
  }
</script>

<style scoped>
  .input-group-addon{
    background-color: #eff3ff;
  }
  .card-views .title, .card-views .value{
    font-weight: 700;
    display: inline-block;
    min-width: 30%;
    text-align: left;
    padding: 3px 0;
  }
  .card-views .value{
    font-weight:400;
  }
  .table thead, .table tr {
    border-top:1px solid rgb(0, 189, 189)
  }

  /* Padding and font style */
  .table td, .table th {
    padding: 5px 10px;
    color: #333;
  }
  .table th{
    color:#3c8dbc;
  }
</style>
